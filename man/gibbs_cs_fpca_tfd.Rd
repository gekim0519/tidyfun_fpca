% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gibbs_cs_fpca_tfd.R
\name{gibbs_cs_fpca_tfd}
\alias{gibbs_cs_fpca_tfd}
\title{Cross-sectional FoSR using a Gibbs sampler and FPCA}
\usage{
gibbs_cs_fpca_tfd(formula, Kt = 5, Kp = 2, data = NULL,
  verbose = TRUE, N.iter = 5000, N.burn = 1000, SEED = NULL,
  sig2.me = 0.01, alpha = 0.1, Aw = NULL, Bw = NULL, Apsi = NULL,
  Bpsi = NULL)
}
\arguments{
\item{formula}{a formula indicating the structure of the proposed model.}

\item{Kt}{number of spline basis functions used to estimate coefficient functions}

\item{Kp}{number of FPCA basis functions to be estimated}

\item{data}{an data frame, list or environment containing the
variables in the model. This includes the response variable of the formula which
should be a tfd class.}

\item{verbose}{logical defaulting to \code{TRUE} -- should updates on progress be printed?}

\item{N.iter}{number of iterations used in the Gibbs sampler}

\item{N.burn}{number of iterations discarded as burn-in}

\item{SEED}{seed value to start the sampler; ensures reproducibility}

\item{sig2.me}{starting value for measurement error variance}

\item{alpha}{tuning parameter balancing second-derivative penalty and
zeroth-derivative penalty (alpha = 0 is all second-derivative penalty)}

\item{Aw}{hyperparameter for inverse gamma controlling variance of spline terms
for population-level effects}

\item{Bw}{hyperparameter for inverse gamma controlling variance of spline terms
for population-level effects}

\item{Apsi}{hyperparameter for inverse gamma controlling variance of spline terms
for FPC effects}

\item{Bpsi}{hyperparameter for inverse gamma controlling variance of spline terms
for FPC effects}
}
\description{
Fitting function for function-on-scalar regression for cross-sectional data.
This function estimates model parameters using a Gibbs sampler and estimates
the residual covariance surface using FPCA.
As an alteration of `refund::gibbs_cs_fpca`, this function takes in a dataframe
with tfd column as an input.
}
\examples{
\dontrun{
library(ggplot2)
library(reshape2)
data(dti) 

dti.ols = ols_cs_tfd(cca ~ pasat, data = dti, Kt = 10)
gibbs_dti = gibbs_cs_fpca_tfd(cca ~ pasat, data = dti, Kt = 10, N.iter = 500, N.burn = 200)
gibbs_dti_wish = gibbs_dti_wish = gibbs_cs_wish_tfd(cca ~ pasat, data = dti, Kt = 10, N.iter = 500, N.burn = 200)
models = c("dti.ols", "gibbs_dti", "gibbs_dti_wish")
intercepts = sapply(models, function(u) get(u)$beta.hat[1,])
slopes = sapply(models, function(u) get(u)$beta.hat[2,])

## graph of estimated coefficient functions (intercept, slope)

plot.dat = melt(intercepts); colnames(plot.dat) = c("grid", "method", "value")
ggplot(plot.dat, aes(x = grid, y = value, group = method, color = method)) +
  geom_path() + theme_bw() + ylab("intercept")

plot.dat = melt(slopes); colnames(plot.dat) = c("grid", "method", "value")
ggplot(plot.dat, aes(x = grid, y = value, group = method, color = method)) +
  geom_path() + theme_bw() + ylab("slope")
}

}
\references{
Goldsmith, J., Kitago, T. (2016).
Assessing Systematic Effects of Stroke on Motor Control using Hierarchical
Function-on-Scalar Regression. \emph{Journal of the Royal Statistical Society:
Series C}, 65 215-236.
}
\author{
Gaeun Kim \email{gk2501@columbia.edu} and
Jeff Goldsmith \email{ajg2202@cumc.columbia.edu}
}
